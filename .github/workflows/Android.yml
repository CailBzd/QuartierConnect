# This is a basic workflow to help you get started with Actions

name: CI CD ANDROID

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

       # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
         node-version: '18'

     # Install dependencies
      - name: Install dependencies
        run: npm install

     # Install Expo CLI globally
      - name: Install Expo CLI and EAS CLI
        run: | 
          npm install -g expo-cli
          npm install -g eas-cli

      - name: Build Android with EAS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: eas build --platform android --non-interactive --profile test
    
      - name: Get build details via API
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}  # Assurez-vous que cette variable est correctement définie
        run: |
          echo "Fetching the latest build information..."
          BUILD_ID=$(eas build:list --platform android --status finished --limit 1 --json --non-interactive | jq -r '.[0].id')
          echo "Build ID: $BUILD_ID"
    
          echo "EAS_PROJECT_ID: $EAS_PROJECT_ID"
          if [ -z "$EAS_PROJECT_ID" ]; then
            echo "Erreur : EAS_PROJECT_ID n'est pas défini."
            exit 1
          fi
    
          BUILD_URL="https://api.expo.dev/v2/projects/$EAS_PROJECT_ID/builds/$BUILD_ID/artifacts"
          echo "Build URL: $BUILD_URL"
    
          echo "Fetching artifacts..."
          HTTP_STATUS=$(curl -s -o artifacts.json -w "%{http_code}" -H "Authorization: Bearer $EXPO_TOKEN" $BUILD_URL)
    
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Échec de la récupération des artefacts. Code HTTP : $HTTP_STATUS"
            cat artifacts.json
            exit 1
          fi
    
          ARTIFACT_URL=$(jq -r '.artifacts.buildUrl' artifacts.json)
          echo "Artifact URL: $ARTIFACT_URL"
    
          if [ "$ARTIFACT_URL" = "null" ]; then
            echo "Erreur : URL de l'artefact non trouvée dans la réponse."
            cat artifacts.json
            exit 1
          fi
    
          echo "Downloading the build artifact..."
          curl -o app-release.aab $ARTIFACT_URL

      - name: Upload AAB to artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab
          path: app-release.aab

      - name: Submit to Google Play
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: eas submit --platform android --non-interactive --profile test --path app-release.aab --track internal
